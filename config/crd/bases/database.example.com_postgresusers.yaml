apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: postgresusers.database.example.com
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
spec:
  group: database.example.com
  names:
    kind: PostgresUser
    listKind: PostgresUserList
    plural: postgresusers
    singular: postgresuser
    shortNames: ["pgu", "pguser"]
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        description: PostgresUser is the Schema for the postgresusers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgresUserSpec defines the desired state of PostgresUser
            type: object
            required:
              - clusterRef
              - username
            properties:
              clusterRef:
                description: ClusterRef references the PostgresCluster this user belongs to
                type: object
                required:
                  - name
                properties:
                  name:
                    description: Name of the PostgresCluster
                    type: string
                    minLength: 1
                  namespace:
                    description: Namespace of the PostgresCluster (defaults to same namespace as PostgresUser)
                    type: string
              username:
                description: Username for the PostgreSQL user. Must be a valid PostgreSQL identifier.
                type: string
                minLength: 1
                maxLength: 63
                pattern: '^[a-zA-Z_][a-zA-Z0-9_]*$'
              password:
                description: Password configuration for the user
                type: object
                properties:
                  secretRef:
                    description: SecretRef references an existing secret containing the password
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        description: Name of the secret
                        type: string
                        minLength: 1
                      key:
                        description: 'Key within the secret (default: "password")'
                        type: string
                        default: "password"
                  generate:
                    description: Generate indicates if a password should be auto-generated
                    type: boolean
                    default: false
                  length:
                    description: 'Length of the generated password (default: 16)'
                    type: integer
                    format: int32
                    minimum: 8
                    maximum: 128
                    default: 16
              privileges:
                description: Privileges defines the roles/privileges granted to the user
                type: array
                maxItems: 20
                items:
                  type: string
              databases:
                description: Databases this user should have access to
                type: array
                maxItems: 100
                items:
                  type: string
              connectionLimit:
                description: 'ConnectionLimit specifies maximum concurrent connections (default: no limit)'
                type: integer
                format: int32
                minimum: -1
                default: -1
          status:
            description: PostgresUserStatus defines the observed state of PostgresUser
            type: object
            properties:
              phase:
                description: Phase represents the current phase of the user (Pending, Ready, Failed)
                type: string
                enum:
                - Pending
                - Ready
                - Failed
              message:
                description: Message provides additional information about the current state
                type: string
              conditions:
                description: Conditions represent the latest available observations
                type: array
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  type: object
                  required:
                    - lastTransitionTime
                    - message
                    - reason
                    - status
                    - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
              lastPasswordChange:
                description: LastPasswordChange timestamp
                type: string
                format: date-time
              databasesGranted:
                description: DatabasesGranted lists the databases the user has access to
                type: array
                items:
                  type: string
        required:
          - spec
    subresources:
      status: {}
    additionalPrinterColumns:
      - name: Username
        type: string
        jsonPath: .spec.username
      - name: Cluster
        type: string
        jsonPath: .spec.clusterRef.name
      - name: Phase
        type: string
        jsonPath: .status.phase
      - name: Age
        type: date
        jsonPath: .metadata.creationTimestamp